#!/usr/bin/python
# -*- coding: utf-8 -*-

# Copyright (C) 2012 Huayra GNU/Linux
#
# Author Miguel Angel Garcia <miguel.garcia@gmail.com>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; version 2
# of the License
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,
# USA.

import gtk
import webkit
import os
import random
import urlparse
import urllib2


def my_sanitize(s):
    """
    Sanitizes the string to be used as a hostname. Removes or replace strange
    characters.
    """
    for (old, new) in [('ñ', 'N'),
        ('á', 'a'), ('Á', 'A'),
        ('é', 'e'), ('É', 'E'),
        ('í', 'i'), ('Í', 'I'),
        ('ó', 'o'), ('Ó', 'O'),
        ('ú', 'u'), ('Ú', 'U'),
    ]:
        s = s.replace(old, new)
    return ''.join([c for c in s.lower() if c.isalpha()])


def generate_hostname(lastname, firstname):
    """
    Generates a hostname from the person lastname and firstname. Random 4
    characters are added to the resulting string in an intent to avoid names
    collision.
    """
    if lastname != '':
        lastname = my_sanitize(lastname) + '-'
    if firstname != '':
        firstname = my_sanitize(firstname) + '-'
    hostname = lastname + firstname
    for i in range(0, 4):
        hostname += random.choice("qwertyuiopasdfghjklzxcvbnm")
    return hostname


def set_hostname(lastname, firstname):
    new_hostname = generate_hostname(lastname, firstname)
    code = os.system("pkexec /usr/sbin/huayra-hostname-set " + new_hostname)
    return code == 0


class HostnameSetupView(webkit.WebView):
    """
    Widget for browsing the bullets.
    """
    def __init__(self, start_page):
        webkit.WebView.__init__(self)
        self.connect('navigation-policy-decision-requested',
            self._on_navigate_decision)
        self.load_uri(start_page)

    def _on_navigate_decision(self, view, frame, req, action, decision):
        """
        Dispatchs actions from pages to program methods.
        """
        parts = req.get_uri().split("://", 1)
        if len(parts) == 2:
            if parts[0] == 'ui':
                params = parts[1].split("?", 1)
                if params[0] == 'set_hostname':
                    qs = urlparse.parse_qs(params[1])
                    lastname = qs['lastname'][0] if 'lastname' in qs else ''
                    firstname = qs['firstname'][0] if 'firstname' in qs else ''
                    if set_hostname(lastname, firstname):
                        gtk.main_quit()
                return True
        return False


def build_app_window(start_page):
    """
    Build application window.
    """
    sw = gtk.ScrolledWindow()
    bullet_browser = HostnameSetupView(start_page)
    sw.add(bullet_browser)
    win = gtk.Window(gtk.WINDOW_TOPLEVEL)
    win.add(sw)
    win.set_resizable(False)
    bullet_browser.set_size_request(600, 400)
    win.set_default_size(600, 400)
    win.set_title("Configurar nombre de la computadora")
    win.set_position(gtk.WIN_POS_CENTER)
    win.connect("destroy", gtk.main_quit)
    return win


if __name__ == '__main__':
    win = build_app_window(
        "file:///usr/share/huayra-hostname-setup/pages/hostname_setup.html")
    win.show_all()
    gtk.main()
